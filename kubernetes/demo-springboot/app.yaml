apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: demo-springboot
  labels:
    app: demo-springboot
  name: demo-springboot
spec:
  replicas: 2
  selector:
    matchLabels:
      app: demo-springboot
  strategy: {}
  template:
    metadata:
      labels:
        app: demo-springboot
    spec:
      containers:
      - image: 323490220842.dkr.ecr.ap-northeast-2.amazonaws.com/demo-maven-springboot:3
        name: demo-maven-springboot
        resources:
          limits:
            memory: 512Mi
            cpu: "0.5"
          requests:
            memory: 256Mi
            cpu: "0.2"
---
apiVersion: v1
kind: Service
metadata:
  namespace: demo-springboot
  labels:
    app: demo-springboot
  name: demo-springboot-svc
spec:
  ports:
  - name: demo-springboot-svc-8080
    port: 80
    protocol: TCP
    nodePort: 30010
    targetPort: 8080
  selector:
    app: demo-springboot
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: demo-springboot
  name: demo-springboot-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/group.name: alb-01
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:323490220842:certificate/28ff71d5-f0d6-4958-abcb-ece79efb6323
    alb.ingress.kubernetes.io/tags: createdBy=aws-load-balancer-controller
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-2016-08
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    external-dns.alpha.kubernetes.io/hostname: pingping2.shop
spec:
  rules:
    - http:
        paths:
          - path: /*
            backend:
              serviceName: ssl-redirect
              servicePort: use-annotation
          - path: /*
            backend:
              serviceName: demo-springboot-svc
              servicePort: 80